#!/bin/sh

#####################################################
#   ██████╗ ███████╗██████╗ ██╗    ██╗███╗   ███╗   #
#   ██╔══██╗██╔════╝██╔══██╗██║    ██║████╗ ████║   #
#   ██████╔╝███████╗██████╔╝██║ █╗ ██║██╔████╔██║   #
#   ██╔══██╗╚════██║██╔═══╝ ██║███╗██║██║╚██╔╝██║   #
#   ██████╔╝███████║██║     ╚███╔███╔╝██║ ╚═╝ ██║   #
#   ╚═════╝ ╚══════╝╚═╝      ╚══╝╚══╝ ╚═╝     ╚═╝   #                                    
##################### By: Mahdi ####################


## Environments
export PATH="${PATH}:${HOME}/.config/bspwm/bin"



export _JAVA_AWT_WM_NONREPARENTING=1

# Parse colors from "~/.Xresources"
xrdb -override "${HOME}/.config/xresources"

xrdb_query()
{
    [ -n "$XRDB_QUERY" ] || XRDB_QUERY="$(xrdb -query)"

    echo "$XRDB_QUERY" | while IFS=';' read -r STRING; do
        [ "${1}" = "${STRING%%\	*}" ] || continue
        echo "${STRING##*\	}"
        break
    done
}

getcolors()
{
    FOREGROUND="$(xrdb_query '*.foreground:')"
    BACKGROUND="$(xrdb_query '*.background:')"
    BLACK="$(xrdb_query '*.color0:')"
    RED="$(xrdb_query '*.color1:')"
    GREEN="$(xrdb_query '*.color2:')"
    YELLOW="$(xrdb_query '*.color3:')"
    BLUE="$(xrdb_query '*.color4:')"
    MAGENTA="$(xrdb_query '*.color5:')"
    CYAN="$(xrdb_query '*.color6:')"
    WHITE="$(xrdb_query '*.color7:')"
}

getcolors

killall -99 polybar  

if [[ $(xrandr -q | grep 'HDMI-1 connected') ]]; then
    xrandr --output eDP-1 --off --output HDMI-1 --primary --mode 1920x1080 --rotate normal &
    bspc monitor HDMI-1 -d I II III IV V VI VII IIX IX X
    polybar --config=~/.config/bspwm/polybar/config.ini --reload example2 &
else
    bspc monitor eDP-1 -d I II III IV V VI VII IIX IX X
    polybar --config=~/.config/bspwm/polybar/config.ini --reload example &
fi

# bspc monitor eDP-1  -d I II III IV V VI VII IIX IX




# ##############################################################################
# #                                  FUNCTIONS                                 # 
# ##############################################################################

# Credits to 6gk/polka
rule() { bspc rule -a "$@" & }
config() { bspc config "$@" & }

# ##############################################################################
# #                                AUTOSTART APPS                              #
# ##############################################################################

# Run keybindings daemon.
pgrep -x sxhkd > /dev/null || sxhkd &

# Run notification daemon.
dunst --config $HOME/.config/dunst/dunstrc &

# Run Picom.
picom --experimental-backend --config $HOME/.config/bspwm/picom.conf &

# Run polkit daemon if doesn't started.
/usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 &
# Run power manager.
xfce4-power-manager &
# Run mpd if doesn't started.
ksuperkey -e 'Super_L=Alt_L|F1' &
# Execute bspwm-specific scripts.
bspfloat &
numlockx &
# Start X wallpaper.
feh --no-fehbg --bg-fill -z  $HOME/Pictures/Wallpaper/
# Fix cursor.
xsetroot -cursor_name left_ptr 
# xsettingsd --config=~/.config/bspwm/xsettingsd &




# ##############################################################################
# #                                 WINDOW RULES                               #
# ##############################################################################


# ##############################################################################
# #                            GENERAL CONFIGURATION                           #
# ##############################################################################


config top_padding 35
config border_width 2
config left_padding 0
config right_padding 0
config button_padding 0
config window_gap 2
config split_ratio 0.50

config borderless_monocle true
config gapless_monocle true
config focus_follows_pointer true

bspc config normal_border_color \#fE48FA
bspc config focused_border_color \#000aff
bspc config presel_feedback_color \#ababab
bspc config active_border_color \#00ff00
#pkill borders ; borders &
bspc config external_rules_command ''

setxkbmap us,ir -option 'grp:alt_shift_toggle' &

bspc rule -a 'MATLAB R2018b' state=floating &
bspc rule -a 'matplotlib' state=floating &

